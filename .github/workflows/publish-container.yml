name: Publish Container Image

on:
  push:
    # Publish on tag pushes matching v*, e.g., v1.0, v20.15.10
    tags:
      - 'v*'
    # Publish on pushes to main branch (as 'latest')
    branches:
      - main
  # Allow manual triggering
  workflow_dispatch:

env:
  # Define registries to push to
  REGISTRY_DOCKERHUB: docker.io
  REGISTRY_GHCR: ghcr.io
  # Image name for Docker Hub
  IMAGE_NAME_DOCKERHUB: ${{ github.repository_owner }}/tasmota-updater
  # Image name for GitHub Container Registry
  IMAGE_NAME_GHCR: ${{ github.repository_owner }}/tasmota-updater

jobs:
  build-and-push:
    name: Build and Push Container Image
    runs-on: ubuntu-latest
    permissions:
      contents: read
      packages: write

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      # Set up QEMU for multi-platform builds
      - name: Set up QEMU
        uses: docker/setup-qemu-action@v3

      # Set up Docker Buildx for multi-platform builds
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      # Login to Docker Hub
      - name: Login to Docker Hub
        uses: docker/login-action@v3
        with:
          registry: ${{ env.REGISTRY_DOCKERHUB }}
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}

      # Login to GitHub Container Registry
      - name: Login to GitHub Container Registry
        uses: docker/login-action@v3
        with:
          registry: ${{ env.REGISTRY_GHCR }}
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      # Extract metadata (tags, labels) for Docker
      - name: Extract Docker metadata
        id: meta
        uses: docker/metadata-action@v5
        with:
          images: |
            ${{ env.REGISTRY_DOCKERHUB }}/${{ env.IMAGE_NAME_DOCKERHUB }}
            ${{ env.REGISTRY_GHCR }}/${{ env.IMAGE_NAME_GHCR }}
          # Generate Docker tags based on the following events/attributes:
          # - on push to main branch: latest
          # - on push of a tag: tag value
          tags: |
            type=raw,value=latest,enable=${{ github.ref == format('refs/heads/{0}', 'main') }}
            type=semver,pattern={{version}}
            type=semver,pattern={{major}}.{{minor}}
            type=semver,pattern={{major}}

      # Build and push Docker image
      - name: Build and push
        uses: docker/build-push-action@v6
        with:
          context: .
          file: ./Containerfile
          push: true
          platforms: linux/amd64,linux/arm64
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}
          cache-from: type=gha
          cache-to: type=gha,mode=max
